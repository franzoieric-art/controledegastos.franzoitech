import{initializeApp as R}from"https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js";import{getAuth as N,signInWithEmailAndPassword as j,sendPasswordResetEmail as V,signOut as O,onAuthStateChanged as G}from"https://www.gstatic.com/firebasejs/9.15.0/firebase-auth.js";import{getFirestore as H,getDoc as _,doc as B,setDoc as U}from"https://www.gstatic.com/firebasejs/9.15.0/firebase-firestore.js";import{getStorage as z,ref as J,uploadBytes as q,getDownloadURL as Y}from"https://www.gstatic.com/firebasejs/9.15.0/firebase-storage.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const m of r)if(m.type==="childList")for(const s of m.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function n(r){const m={};return r.integrity&&(m.integrity=r.integrity),r.referrerPolicy&&(m.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?m.credentials="include":r.crossOrigin==="anonymous"?m.credentials="omit":m.credentials="same-origin",m}function i(r){if(r.ep)return;r.ep=!0;const m=n(r);fetch(r.href,m)}})();const K={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_FIREBASE_API_KEY:"AIzaSyApSIolaeRxXdVNsnZkAvz_F_ILmxs1_K0",VITE_FIREBASE_APP_ID:"1:331667008487:web:c5200f64ac27d0c32feb42",VITE_FIREBASE_AUTH_DOMAIN:"controle-de-gastos-74daf.firebaseapp.com",VITE_FIREBASE_MESSAGING_SENDER_ID:"331667008487",VITE_FIREBASE_PROJECT_ID:"controle-de-gastos-74daf",VITE_FIREBASE_STORAGE_BUCKET:"controle-de-gastos-74daf.firebasestorage.app"};console.log("Verificando VITE_FIREBASE_API_KEY:","AIzaSyApSIolaeRxXdVNsnZkAvz_F_ILmxs1_K0");console.log("Todas as variáveis de ambiente do Vite:",K);const W={apiKey:"AIzaSyApSIolaeRxXdVNsnZkAvz_F_ILmxs1_K0",authDomain:"controle-de-gastos-74daf.firebaseapp.com",projectId:"controle-de-gastos-74daf",storageBucket:"controle-de-gastos-74daf.firebasestorage.app",messagingSenderId:"331667008487",appId:"1:331667008487:web:c5200f64ac27d0c32feb42"},$=R(W),T=N($),D=H($),Q=z($),A=document.getElementById("auth-screen"),k=document.getElementById("app-screen"),C=document.getElementById("main-auth-btn"),X=document.getElementById("forgot-password-link"),Z=document.getElementById("auth-error"),P=document.getElementById("theme-toggle-btn"),S=document.getElementById("loading-overlay"),M=e=>{e.key==="Enter"&&(e.preventDefault(),C.click())};document.getElementById("email-input").addEventListener("keydown",M);document.getElementById("password-input").addEventListener("keydown",M);document.getElementById("confirm-password-input").addEventListener("keydown",M);const w=e=>{Z.textContent=e},F=e=>{document.documentElement.classList.toggle("dark",e==="dark"),P.textContent=e==="dark"?"☀️":"🌙",window.App&&a.state.currentUserId&&a.showMonth(a.state.activeMonthIndex)};F(localStorage.getItem("theme")||"light");C.addEventListener("click",()=>{const e=document.getElementById("email-input").value,t=document.getElementById("password-input").value;w("");const n=C.textContent;C.disabled=!0,C.textContent="Aguarde...";const i=()=>{C.disabled=!1,C.textContent=n};j(T,e,t).catch(r=>{w("Email ou senha inválidos."),i()})});X.addEventListener("click",e=>{e.preventDefault();const t=document.getElementById("email-input").value;if(!t){w("Por favor, insira seu email para recuperar a senha.");return}V(T,t).then(()=>{w("Email de recuperação enviado!")}).catch(n=>{w("Não foi possível enviar o email.")})});document.getElementById("logout-btn").addEventListener("click",()=>{O(T)});const a={state:{currentUserId:null,profile:{name:"",avatarUrl:""},integrations:{whatsapp:{phoneNumberId:"",accessToken:"",webhookVerifyToken:""}},creditCards:[],categories:[{name:"Alimentação",budget:500},{name:"Transporte",budget:150},{name:"Moradia",budget:1500},{name:"Lazer",budget:300},{name:"Saúde",budget:200},{name:"Outros",budget:100}],recurringEntries:[],monthlyData:{},activeMonthIndex:new Date().getMonth(),lastViewedMonthIndex:new Date().getMonth(),chartInstances:{},saveTimeout:null},ui:{monthContentContainer:null,settingsModal:null,accountModal:null,userNameInput:null,userEmailDisplay:null,whatsappPhoneId:null,whatsappToken:null,whatsappWebhookUrl:null,whatsappVerifyToken:null,whatsappStatus:null,newCardNameInput:null,cardListContainer:null,newCategoryNameInput:null,categoryListContainer:null,recurringListContainer:null,saveFeedback:null,aiAnalysisModal:null,aiAnalysisResult:null},constants:{monthNames:["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro","Balanço Anual"],basePaymentMethods:["Pix","Débito","Crédito","Dinheiro","Outro"]},init(e){this.state.currentUserId=e,this.ui.monthContentContainer=document.getElementById("monthContentContainer"),this.ui.settingsModal=document.getElementById("settings-modal"),this.ui.accountModal=document.getElementById("account-modal"),this.ui.userNameInput=document.getElementById("user-name-input"),this.ui.userEmailDisplay=document.getElementById("user-email-display"),this.ui.whatsappPhoneId=document.getElementById("whatsapp-phone-id"),this.ui.whatsappToken=document.getElementById("whatsapp-token"),this.ui.whatsappWebhookUrl=document.getElementById("whatsapp-webhook-url"),this.ui.whatsappVerifyToken=document.getElementById("whatsapp-verify-token"),this.ui.whatsappStatus=document.getElementById("whatsapp-status"),this.ui.newCardNameInput=document.getElementById("new-card-name"),this.ui.cardListContainer=document.getElementById("card-list"),this.ui.newCategoryNameInput=document.getElementById("new-category-name"),this.ui.categoryListContainer=document.getElementById("category-list"),this.ui.recurringListContainer=document.getElementById("recurring-list"),this.ui.saveFeedback=document.getElementById("save-feedback"),this.ui.aiAnalysisModal=document.getElementById("ai-analysis-modal"),this.ui.aiAnalysisResult=document.getElementById("ai-analysis-result"),this.loadData(),this.bindGlobalEventListeners()},helpers:{formatCurrency:e=>`R$ ${e.toFixed(2).replace(".",",")}`,debounce(e,t){return(...n)=>{clearTimeout(a.state.saveTimeout),a.state.saveTimeout=setTimeout(()=>{e.apply(this,n)},t)}},showSaveFeedback(){a.ui.saveFeedback.classList.add("show"),setTimeout(()=>{a.ui.saveFeedback.classList.remove("show")},2e3)},cleanAIResponse(e){if(typeof e!="string")return"";let t=e.replace(/```html|```/g,"");const n=t.indexOf("<");n>-1&&(t=t.substring(n));const i=["Observações:","Como usar:","Cálculo dos Totais:","Formatação HTML:","Personalização das Sugestões:"];for(const r of i){const m=t.indexOf(r);m>50&&(t=t.substring(0,m))}return t.trim()},generateRandomToken(){return[...Array(32)].map(()=>Math.floor(Math.random()*16).toString(16)).join("")}},async handleAvatarUpload(e){const t=e.target.files[0];if(!t||!this.state.currentUserId)return;const n=document.getElementById("user-avatar"),i=n.src;n.style.opacity="0.5";try{const r=`avatars/${this.state.currentUserId}`,m=J(Q,r);await q(m,t);const s=await Y(m);this.state.profile.avatarUrl=s,n.src=s,await this.saveDataToFirestore()}catch(r){console.error("Erro no upload do avatar:",r),n.src=i}finally{n.style.opacity="1"}},async saveDataToFirestore(){if(a.state.currentUserId)try{const e={profile:a.state.profile,integrations:a.state.integrations,monthlyData:a.state.monthlyData,creditCards:a.state.creditCards,categories:a.state.categories,recurringEntries:a.state.recurringEntries};await U(B(D,"users",a.state.currentUserId),e,{merge:!0}),a.helpers.showSaveFeedback()}catch(e){console.error("Erro ao salvar dados: ",e)}},debouncedSave:null,async loadData(){if(this.state.currentUserId){try{const e=await _(B(D,"users",this.state.currentUserId));if(e.exists()){const t=e.data();this.state.profile=t.profile||{name:"",avatarUrl:""},this.state.integrations=t.integrations||{whatsapp:{phoneNumberId:"",accessToken:"",webhookVerifyToken:""}},this.state.monthlyData=t.monthlyData||{},this.state.creditCards=t.creditCards||[],this.state.categories=t.categories&&t.categories.length>0?t.categories:this.state.categories,this.state.recurringEntries=t.recurringEntries||[]}this.state.integrations.whatsapp.webhookVerifyToken||(this.state.integrations.whatsapp.webhookVerifyToken=this.helpers.generateRandomToken());for(let t=0;t<12;t++)this.state.monthlyData[t]||(this.state.monthlyData[t]={}),this.state.monthlyData[t].pjEntries=this.state.monthlyData[t].pjEntries||[],this.state.monthlyData[t].pfEntries=this.state.monthlyData[t].pfEntries||[],(!Array.isArray(this.state.monthlyData[t].expenses)||this.state.monthlyData[t].expenses.length<31)&&(this.state.monthlyData[t].expenses=Array(31).fill(null).map(()=>({personalEntries:[],businessEntries:[]}))),this.state.monthlyData[t].expenses.forEach(n=>{n&&n.personalEntries&&n.personalEntries.forEach(i=>{i.category||(i.category="Outros")})})}catch(e){console.error("Erro ao carregar dados:",e)}this.ui.monthContentContainer.innerHTML="",this.constants.monthNames.forEach((e,t)=>{this.ui.monthContentContainer.insertAdjacentHTML("beforeend",t===12?this.render.createBalanceContentHTML():this.render.createMonthContentHTML(t))}),this.showMonth(this.state.activeMonthIndex),S.classList.add("hidden"),this.render.updateHeader()}},handleRecurringDeletion(e,t=0){console.log(`--- INICIANDO REMOÇÃO ---
    ID da Recorrência: ${e}
    A partir do Mês (índice): ${t}
    -------------------------`);for(let n=t;n<12;n++){const i=this.state.monthlyData[n];i&&(i.pjEntries=i.pjEntries.filter(r=>r.recurringId!==e),i.pfEntries=i.pfEntries.filter(r=>r.recurringId!==e),i.expenses.forEach(r=>{r.personalEntries&&(r.personalEntries=r.personalEntries.filter(m=>m.recurringId!==e)),r.businessEntries&&(r.businessEntries=r.businessEntries.filter(m=>m.recurringId!==e))}))}console.log(`Lançamentos com recurringId=${e} removidos a partir do mês ${t}.`)},showMonth(e){this.state.activeMonthIndex!==e&&this.state.saveTimeout&&(clearTimeout(this.state.saveTimeout),this.saveDataToFirestore(),this.state.saveTimeout=null),e>=0&&e<=11&&(this.state.lastViewedMonthIndex=e),this.state.activeMonthIndex=e,Object.values(this.state.chartInstances).forEach(n=>n?.destroy()),document.querySelectorAll(".month-content").forEach(n=>n.classList.remove("active")),e<12&&this.applyRecurringEntries(e);const t=document.getElementById(`month-${e}-content`);t&&(t.classList.add("active"),e<12?(this.render.renderCalendarView(e),this.render.renderPJEntries(e),this.render.renderPFEntries(e),this.render.renderExpenseTable(e),this.recalculateAndDisplayTotals(e)):this.render.renderBalanceSummary())},recalculateAndDisplayTotals(e){const t=this.state.monthlyData[e];if(!t)return;const n={pj:t.pjEntries.reduce((s,o)=>s+o.amount,0),pf:t.pfEntries.reduce((s,o)=>s+o.amount,0),personal:t.expenses.flat().reduce((s,o)=>s+o.personalEntries.reduce((g,p)=>g+p.amount,0),0),business:t.expenses.flat().reduce((s,o)=>s+o.businessEntries.reduce((g,p)=>g+p.amount,0),0)};n.remainingPersonal=n.pf-n.personal,n.remainingBusiness=n.pj-n.business,n.remainingTotal=n.pj+n.pf-(n.personal+n.business),document.getElementById(`companyCash-${e}`).textContent=this.helpers.formatCurrency(n.pj),document.getElementById(`personalCash-${e}`).textContent=this.helpers.formatCurrency(n.pf),document.getElementById(`totalPersonalExpenses-${e}`).textContent=this.helpers.formatCurrency(n.personal),document.getElementById(`totalBusinessExpenses-${e}`).textContent=this.helpers.formatCurrency(n.business);const i=document.getElementById(`remainingPersonal-${e}`);i.textContent=this.helpers.formatCurrency(n.remainingPersonal),i.style.color=n.remainingPersonal<0?"var(--red-color)":"var(--green-color)";const r=document.getElementById(`remainingBusiness-${e}`);r.textContent=this.helpers.formatCurrency(n.remainingBusiness),r.style.color=n.remainingBusiness<0?"var(--red-color)":"var(--green-color)";const m=document.getElementById(`remainingTotal-${e}`);m.textContent=this.helpers.formatCurrency(n.remainingTotal),m.style.color=n.remainingTotal<0?"var(--red-color)":"var(--primary-color)",this.render.updateBudgetAlerts(e),this.render.updateAllCharts(e,{totalPersonal:n.personal,totalBusiness:n.business,remainingBudget:n.remainingTotal})},applyRecurringEntries(e){if(!this.state.monthlyData[e])return;let t=!1;const n=new Set,i=this.state.monthlyData[e];i.pfEntries.forEach(s=>{s.recurringId&&n.add(s.recurringId)}),i.pjEntries.forEach(s=>{s.recurringId&&n.add(s.recurringId)}),i.expenses.forEach(s=>{s.personalEntries.forEach(o=>{o.recurringId&&n.add(o.recurringId)}),s.businessEntries.forEach(o=>{o.recurringId&&n.add(o.recurringId)})});const r=new Date().getFullYear(),m=new Date(r,e+1,0).getDate();this.state.recurringEntries.forEach(s=>{if(s.id&&!n.has(s.id)){const g=Math.min(s.dayOfMonth,m)-1;if(g<0||g>=m)return;const p={id:Date.now()+Math.random(),description:s.description||"Lançamento recorrente",amount:s.amount,isRecurring:!0,recurringId:s.id};s.type==="Ganho PF"?(i.pfEntries.push(p),t=!0):s.type==="Ganho PJ"?(i.pjEntries.push(p),t=!0):s.type==="Gasto Pessoal"?(Object.assign(p,{category:s.category,paymentMethod:s.paymentMethod,card:s.card}),i.expenses[g].personalEntries.push(p),t=!0):s.type==="Gasto Empresa"&&(Object.assign(p,{category:"N/A",paymentMethod:s.paymentMethod,card:s.card}),i.expenses[g].businessEntries.push(p),t=!0)}}),t&&this.saveDataToFirestore()},exportMonthToCSV(e){const t=this.state.monthlyData[e];if(!t)return;const n=this.constants.monthNames[e],i=t.pjEntries.reduce((d,u)=>d+u.amount,0),r=t.pfEntries.reduce((d,u)=>d+u.amount,0),m=t.expenses.flat().reduce((d,u)=>d+u.personalEntries.reduce((f,v)=>f+v.amount,0),0),s=t.expenses.flat().reduce((d,u)=>d+u.businessEntries.reduce((f,v)=>f+v.amount,0),0),o=i+r,g=m+s,p=o-g;let h="data:text/csv;charset=utf-8,";h+=`Relatorio Financeiro - ${n}\r
\r
`,h+=`Resumo do Mes\r
`,h+=`Total de Ganhos;${o.toFixed(2).replace(".",",")}\r
`,h+=`Total de Gastos;${g.toFixed(2).replace(".",",")}\r
`,h+=`Saldo Final;${p.toFixed(2).replace(".",",")}\r
\r
`,h+=`Detalhes das Transacoes\r
`,h+=`Tipo;Dia;Descricao;Valor;Categoria;Metodo de Pagamento;Cartao\r
`;const c=d=>`"${(d||"").replace(/"/g,'""')}"`;t.pjEntries.forEach(d=>h+=`Ganho PJ;;${c(d.description)};${d.amount.toFixed(2).replace(".",",")};;;\r
`),t.pfEntries.forEach(d=>h+=`Ganho PF;;${c(d.description)};${d.amount.toFixed(2).replace(".",",")};;;\r
`),t.expenses.forEach((d,u)=>{const f=(v,b)=>{v.forEach(E=>{let y=[b,u+1,c(E.description),E.amount.toFixed(2).replace(".",","),c(E.category),c(E.paymentMethod),c(E.card)].join(";");h+=y+`\r
`})};f(d.personalEntries,"Gasto Pessoal"),f(d.businessEntries,"Gasto Empresa")});const l=document.createElement("a");l.setAttribute("href",encodeURI(h)),l.setAttribute("download",`relatorio_${n}.csv`),document.body.appendChild(l),l.click(),document.body.removeChild(l)},exportMonthToPDF(e){const t=this.state.monthlyData[e];if(!t)return;const{jsPDF:n}=window.jspdf,i=new n,r=this.constants.monthNames[e],m=i.internal.pageSize.height,s=i.internal.pageSize.width,o=y=>{y.saveGraphicsState(),y.setGState(new y.GState({opacity:.05})),y.setFontSize(40),y.setTextColor(200,200,200),y.setFont("helvetica","bold"),y.text("Rico Plus by Franzoi Tech",s/2,m/1.8,{angle:-45,align:"center"}),y.restoreGraphicsState()},g=y=>{i.setFontSize(16),i.setFont("helvetica","bold"),i.text("Relatório Financeiro",14,20),i.setFontSize(10),i.setFont("helvetica","normal"),i.text(`Período: ${r}`,14,26),i.setLineWidth(.5),i.line(14,30,s-14,30);const x=i.internal.getNumberOfPages();i.setFontSize(8),i.text(`Rico Plus by Franzoi Tech | Gerado em: ${new Date().toLocaleString("pt-BR")}`,14,m-10),i.text(`Página ${y.pageNumber} de ${x}`,s-14,m-10,{align:"right"})},p=t.pjEntries.reduce((y,x)=>y+x.amount,0),h=t.pfEntries.reduce((y,x)=>y+x.amount,0),c=t.expenses.flat().reduce((y,x)=>y+x.personalEntries.reduce((I,L)=>I+L.amount,0),0),l=t.expenses.flat().reduce((y,x)=>y+x.businessEntries.reduce((I,L)=>I+L.amount,0),0),d=p+h-(c+l),u={};t.expenses.flat().forEach(y=>{y.personalEntries.forEach(x=>{u[x.category]=(u[x.category]||0)+x.amount})});const f=Object.keys(u).map(y=>[y,this.helpers.formatCurrency(u[y])]),v=[];t.pjEntries.forEach(y=>v.push(["-","Ganho PJ",y.description,"-","-",y.amount.toFixed(2).replace(".",",")])),t.pfEntries.forEach(y=>v.push(["-","Ganho PF",y.description,"-","-",y.amount.toFixed(2).replace(".",",")])),t.expenses.forEach((y,x)=>{y.personalEntries.forEach(I=>v.push([x+1,"Gasto Pessoal",I.description,I.category,`${I.paymentMethod}${I.card?` (${I.card})`:""}`,I.amount.toFixed(2).replace(".",",")])),y.businessEntries.forEach(I=>v.push([x+1,"Gasto Empresa",I.description,"-",`${I.paymentMethod}${I.card?` (${I.card})`:""}`,I.amount.toFixed(2).replace(".",",")]))});let b=40;i.autoTable({startY:b,head:[["Resumo Geral","Valor"]],body:[["Total Ganhos",this.helpers.formatCurrency(p+h)],["Total Gastos",this.helpers.formatCurrency(c+l)],[{content:"Saldo Final",styles:{fontStyle:"bold"}},{content:this.helpers.formatCurrency(d),styles:{fontStyle:"bold"}}]],theme:"grid",headStyles:{fillColor:[22,160,133]}}),b=i.lastAutoTable.finalY+10,f.length>0&&(i.autoTable({startY:b,head:[["Gastos por Categoria (Pessoal)","Total"]],body:f,theme:"striped",headStyles:{fillColor:[41,128,185]}}),b=i.lastAutoTable.finalY+10),i.autoTable({startY:b,head:[["Data","Tipo","Descrição","Cat.","Pag.","Valor (R$)"]],body:v,theme:"grid",didDrawPage:y=>{o(i),g(y)},headStyles:{fillColor:[44,62,80]},margin:{top:38,bottom:20}});const E=i.internal.getNumberOfPages();for(let y=1;y<=E;y++)i.setPage(y),o(i),g({pageNumber:y});i.save(`relatorio_${r}.pdf`)},bindGlobalEventListeners(){this.debouncedSave=this.helpers.debounce(this.saveDataToFirestore,750);const e=document.getElementById("chatbot-modal"),t=e.querySelector(".modal-content");document.getElementById("floating-chatbot-btn").addEventListener("click",()=>{e.classList.remove("hidden"),setTimeout(()=>{e.style.opacity="1",t.style.transform="translateY(0)"},10)});const n=()=>{e.style.opacity="0",t.style.transform="translateY(2rem)",setTimeout(()=>{e.classList.add("hidden")},300)};document.getElementById("close-chatbot-modal-btn").addEventListener("click",n),document.getElementById("chatbot-send-btn").addEventListener("click",()=>{const s=document.getElementById("chatbot-input"),o=document.getElementById("chatbot-messages"),g=s.value.trim();g&&(o.innerHTML+=`
                <div class="flex justify-end">
                    <div class="p-3 rounded-lg max-w-[85%] text-sm text-white" style="background-color: var(--primary-color);">
                        <p class="font-bold mb-1">Você</p>
                        <p>${g}</p>
                    </div>
                </div>
            `,o.scrollTop=o.scrollHeight,setTimeout(()=>{o.innerHTML+=`
                    <div class="p-3 rounded-lg max-w-[85%] text-sm" style="background-color: var(--secondary-bg);">
                        <p class="font-bold mb-1">Assistente</p>
                        <p class="italic">Pensando...</p>
                    </div>
                `,o.scrollTop=o.scrollHeight,a.ai.getChatbotResponse(g)},500),s.value="")}),document.getElementById("chatbot-input").addEventListener("keydown",s=>{s.key==="Enter"&&(s.preventDefault(),document.getElementById("chatbot-send-btn").click())}),document.getElementById("avatar-upload-input").addEventListener("change",this.handleAvatarUpload.bind(this)),P.addEventListener("click",()=>{const s=document.documentElement.classList.contains("dark")?"light":"dark";localStorage.setItem("theme",s),F(s)});const i=document.getElementById("action-menu-btn"),r=document.getElementById("action-menu-dropdown");i.addEventListener("click",s=>{s.stopPropagation(),r.classList.toggle("is-closed")}),document.addEventListener("click",()=>{r.classList.contains("is-closed")||r.classList.add("is-closed")}),document.getElementById("manage-settings-btn").addEventListener("click",s=>{s.preventDefault(),document.body.classList.add("modal-open"),this.render.renderSettingsModal()}),document.getElementById("close-modal-btn").addEventListener("click",()=>{document.body.classList.remove("modal-open"),this.ui.settingsModal.classList.add("hidden"),this.showMonth(this.state.activeMonthIndex)}),document.getElementById("manage-account-btn").addEventListener("click",s=>{console.log("CLIQUE NO BOTÃO 'CONTA' FUNCIONOU!"),s.preventDefault(),document.body.classList.add("modal-open"),this.render.renderAccountModal()}),document.getElementById("close-account-modal-btn").addEventListener("click",()=>{document.body.classList.remove("modal-open"),this.ui.accountModal.classList.add("hidden")}),document.getElementById("save-profile-btn").addEventListener("click",()=>{a.state.profile.name=a.ui.userNameInput.value,a.saveDataToFirestore(),a.ui.accountModal.classList.add("hidden"),a.helpers.showSaveFeedback(),a.render.updateHeader()}),document.getElementById("save-integration-btn").addEventListener("click",()=>{const s=a.state.integrations.whatsapp;s.phoneNumberId=a.ui.whatsappPhoneId.value,s.accessToken=a.ui.whatsappToken.value,s.webhookVerifyToken=a.ui.whatsappVerifyToken.value,a.saveDataToFirestore(),a.ui.accountModal.classList.add("hidden"),a.helpers.showSaveFeedback()}),document.getElementById("generate-verify-token-btn").addEventListener("click",()=>{const s=this.helpers.generateRandomToken();a.ui.whatsappVerifyToken.value=s}),document.getElementById("copy-webhook-url-btn").addEventListener("click",s=>{navigator.clipboard.writeText(a.ui.whatsappWebhookUrl.value),s.target.textContent="Copiado!",setTimeout(()=>{s.target.textContent="Copiar"},2e3)}),document.getElementById("close-ai-modal-btn").addEventListener("click",()=>{this.ui.aiAnalysisModal.classList.add("hidden")}),document.getElementById("add-card-btn").addEventListener("click",()=>{const s=this.ui.newCardNameInput.value.trim();s&&!this.state.creditCards.includes(s)&&(this.state.creditCards.push(s),this.ui.newCardNameInput.value="",this.render.renderCardList(),this.saveDataToFirestore())}),document.getElementById("add-category-btn").addEventListener("click",()=>{const s=this.ui.newCategoryNameInput.value.trim(),o=s.toLowerCase();s&&!this.state.categories.some(g=>g.name.toLowerCase()===o)?(this.state.categories.push({name:s,budget:0}),this.ui.newCategoryNameInput.value="",this.render.renderCategoryList(),this.saveDataToFirestore()):s&&alert("Já existe uma categoria com este nome.")}),document.getElementById("recurring-type").addEventListener("change",s=>{document.getElementById("recurring-expense-fields").classList.toggle("hidden",!s.target.value.includes("Gasto"))}),document.getElementById("recurring-payment").addEventListener("change",s=>{document.getElementById("recurring-card").classList.toggle("hidden",s.target.value!=="Crédito")}),document.getElementById("add-recurring-btn").addEventListener("click",()=>{const s={id:Date.now(),description:document.getElementById("recurring-desc").value,amount:parseFloat(document.getElementById("recurring-amount").value)||0,dayOfMonth:parseInt(document.getElementById("recurring-day").value)||1,type:document.getElementById("recurring-type").value};if(!s.description||s.amount<=0){alert("Preencha descrição e valor.");return}s.type.includes("Gasto")&&(s.category=document.getElementById("recurring-category").value,s.paymentMethod=document.getElementById("recurring-payment").value,s.card=s.paymentMethod==="Crédito"?document.getElementById("recurring-card").value:""),this.state.recurringEntries.push(s),this.render.renderRecurringList(),this.saveDataToFirestore(),document.getElementById("recurring-form").querySelectorAll("input, select").forEach(o=>o.value="")}),document.body.addEventListener("click",s=>{const o=s.target,g=o.closest(".settings-accordion-trigger");if(g){g.parentElement.classList.toggle("active");return}const p=o.closest('.calendar-nav-btn, [data-action="show-annual"]');if(p){const c=p.dataset.action,l=a.state.activeMonthIndex;if(c==="show-annual")a.state.lastViewedMonthIndex=l,a.showMonth(12);else if(c==="prev-month"){const d=(l-1+12)%12;a.showMonth(d)}else if(c==="next-month"){const d=(l+1)%12;a.showMonth(d)}return}const h=o.closest(".calendar-day.current-month");if(h){const c=parseInt(h.dataset.day),l=a.state.activeMonthIndex,d=document.querySelectorAll(`#expense-accordion-container-${l} .accordion-item`),u=d[c],f=h.classList.contains("active");document.querySelectorAll(`#calendar-container-${l} .calendar-day.active`).forEach(v=>v.classList.remove("active")),d.forEach(v=>v.classList.remove("active")),f||(h.classList.add("active"),u&&u.classList.add("active"))}if(o.matches(".tab-button")&&this.showMonth(parseInt(o.dataset.monthIndex)),o.matches(".export-csv-btn")&&this.exportMonthToCSV(parseInt(o.dataset.monthIndex)),o.matches(".export-pdf-btn")&&this.exportMonthToPDF(parseInt(o.dataset.monthIndex)),o.matches("#copy-pix-btn")){const c=document.getElementById("pix-key").textContent;navigator.clipboard.writeText(c).then(()=>{o.textContent="Copiado!",setTimeout(()=>{o.textContent="Copiar"},2e3)})}if(o.closest(".accordion-trigger")){const l=o.closest(".accordion-trigger").parentElement,d=l.parentElement.querySelectorAll(".accordion-item");l.classList.contains("active")?l.classList.remove("active"):(d.forEach(u=>u.classList.remove("active")),l.classList.add("active"))}if(o.closest(".ai-analysis-btn")&&this.ai.getFinancialAnalysis(parseInt(o.closest(".ai-analysis-btn").dataset.monthIndex)),o.matches("#ai-annual-analysis-btn")&&this.ai.getAnnualFinancialAnalysis(),o.closest(".suggest-category-btn")){const c=o.closest(".suggest-category-btn"),l=c.closest(".expense-entry-row");if(l){const d=l.querySelector(".remove-btn").dataset.entryId,u=l.querySelector('[data-field="description"]');u&&u.value&&this.ai.getCategorySuggestion(u.value,d,c)}}if(o.matches(".add-entry-btn")){const{monthIndex:c,type:l,day:d,category:u}=o.dataset,f=parseInt(c),v=l==="pj"?this.state.monthlyData[f].pjEntries:l==="pf"?this.state.monthlyData[f].pfEntries:this.state.monthlyData[f].expenses[parseInt(d)][`${u}Entries`];if(l==="pj"||l==="pf"){const b={id:Date.now(),description:"",amount:0};v.push(b),document.getElementById(`${l}-entries-container-${f}`).appendChild(this.render.createEntryElement({monthIndex:f,entry:b,type:l}))}else if(l==="expense"){const b={id:Date.now(),description:"",amount:0,paymentMethod:"Pix",card:this.state.creditCards.length>0?this.state.creditCards[0]:"",category:this.state.categories[0].name};v.push(b),document.getElementById(`${u}-entries-${f}-${d}`).appendChild(this.render.createEntryElement({monthIndex:f,dayIndex:parseInt(d),category:u,entry:b,type:"expense"}))}this.recalculateAndDisplayTotals(f),this.saveDataToFirestore()}if(o.matches(".remove-btn")){const{monthIndex:c,type:l,day:d,category:u,entryId:f}=o.dataset,v=parseInt(c),b=parseFloat(f);l==="pj"?this.state.monthlyData[v].pjEntries=this.state.monthlyData[v].pjEntries.filter(E=>E.id!==b):l==="pf"?this.state.monthlyData[v].pfEntries=this.state.monthlyData[v].pfEntries.filter(E=>E.id!==b):this.state.monthlyData[v].expenses[parseInt(d)][`${u}Entries`]=this.state.monthlyData[v].expenses[parseInt(d)][`${u}Entries`].filter(E=>E.id!==b),o.closest(".expense-entry-row").remove(),this.recalculateAndDisplayTotals(v),this.saveDataToFirestore()}if(o.matches(".remove-card-btn")){const c=o.dataset.cardName;for(let l=0;l<12;l++)this.state.monthlyData[l].expenses.forEach(d=>{[...d.personalEntries,...d.businessEntries].forEach(u=>{u.card===c&&(u.card="Cartão Removido")})});this.state.creditCards=this.state.creditCards.filter(l=>l!==c),this.render.renderCardList(),this.saveDataToFirestore()}if(o.matches(".remove-category-btn")){const c=o.dataset.categoryName;for(let l=0;l<12;l++)this.state.monthlyData[l].expenses.forEach(d=>{d.personalEntries.forEach(u=>{u.category===c&&(u.category="Outros")})});this.state.categories=this.state.categories.filter(l=>l.name!==c),this.render.renderCategoryList(),this.saveDataToFirestore()}if(o.matches(".remove-recurring-btn")){const c=parseInt(o.dataset.index),l=a.state.recurringEntries[c];if(l&&l.id){const d=document.getElementById("confirm-recurring-delete-modal");d.dataset.recurringId=l.id,d.dataset.recurringIndex=c;const u=document.getElementById("delete-future-recurring-btn"),f=a.constants.monthNames[a.state.activeMonthIndex];u.textContent=`Remover de ${f} em diante`,d.classList.remove("hidden")}}if(o.matches('[data-action="back-to-months"]')){const c=a.state.lastViewedMonthIndex;typeof c=="number"?a.showMonth(c):a.showMonth(new Date().getMonth())}}),document.body.addEventListener("input",s=>{const o=s.target;if(o.matches(".entry-input")){const p=o.closest(".expense-entry-row").querySelector(".remove-btn");if(!p)return;const{monthIndex:h,type:c,day:l,category:d,entryId:u}=p.dataset,f=parseInt(h),v=parseFloat(u);let b;if(c==="pj"?b=this.state.monthlyData[f].pjEntries.find(E=>E.id===v):c==="pf"?b=this.state.monthlyData[f].pfEntries.find(E=>E.id===v):b=this.state.monthlyData[f].expenses[parseInt(l)][`${d}Entries`].find(E=>E.id===v),b){const E=o.dataset.field;E==="amount"?b.amount=parseFloat(o.value)||0:b[E]=o.value,E==="paymentMethod"?this.showMonth(f):this.recalculateAndDisplayTotals(f),this.debouncedSave()}}if(o.matches(".category-budget-input")){const g=this.state.categories.find(p=>p.name===o.dataset.categoryName);g&&(g.budget=parseFloat(o.value)||0,this.debouncedSave())}}),document.body.addEventListener("change",s=>{const o=s.target;if(o.matches(".category-name-input")){const g=o.dataset.oldName,p=o.value.trim(),h=p.toLowerCase(),c=g.toLowerCase(),l=this.state.categories.some(d=>d.name.toLowerCase()===h);if(p&&c!==h&&!l){for(let u=0;u<12;u++)this.state.monthlyData[u].expenses.forEach(f=>{f.personalEntries.forEach(v=>{v.category.toLowerCase()===c&&(v.category=p)})});const d=this.state.categories.find(u=>u.name.toLowerCase()===c);d&&(d.name=p),o.dataset.oldName=p,this.state.recurringEntries.forEach(u=>{u.category.toLowerCase()===c&&(u.category=p)}),this.saveDataToFirestore()}else l&&c!==h&&(alert("Já existe uma categoria com este nome."),o.value=g)}});const m=document.getElementById("confirm-recurring-delete-modal");document.getElementById("delete-all-recurring-btn").addEventListener("click",()=>{const s=parseFloat(m.dataset.recurringId),o=parseInt(m.dataset.recurringIndex);console.log(`Botão "Remover Todos" clicado. Tentando remover ID: ${s}`),a.handleRecurringDeletion(s,0),a.handleRecurringDeletion(s,0),a.state.recurringEntries.splice(o,1),a.render.renderRecurringList(),a.showMonth(a.state.activeMonthIndex),a.saveDataToFirestore(),m.classList.add("hidden")}),document.getElementById("delete-future-recurring-btn").addEventListener("click",()=>{const s=parseFloat(m.dataset.recurringId),o=parseInt(m.dataset.recurringIndex);a.handleRecurringDeletion(s,a.state.activeMonthIndex),a.state.recurringEntries.splice(o,1),a.render.renderRecurringList(),a.showMonth(a.state.activeMonthIndex),a.saveDataToFirestore(),m.classList.add("hidden")}),document.getElementById("cancel-delete-recurring-btn").addEventListener("click",()=>{m.classList.add("hidden")})},ai:{async getFinancialAnalysis(e){a.ui.aiAnalysisModal.classList.remove("hidden"),a.ui.aiAnalysisResult.innerHTML='<p class="muted-text">Analisando seus dados...</p>';try{const t=a.state.monthlyData[e];if(!t)throw new Error("Dados do mês não encontrados.");const n=`
                    **Contexto, Regras e Funcionalidades do App:**
                    1. Você é o assistente de IA da plataforma "Rico Plus".
                    2. Você pode dar dicas financeiras gerais, mas ao sugerir ações, SÓ PODE usar as funcionalidades existentes.
                    3. Funcionalidades existentes: Lançamento de ganhos/despesas, categorização, metas de gastos, resumos, gráficos, lançamentos recorrentes, gestão de cartões, exportação PDF/CSV.
                    4. **NÃO INVENTE** funcionalidades que não existem (ex: notificações).
                    5. **NUNCA** mencione apps concorrentes.

                    **Tarefa:**
                    Gere um relatório em HTML (sem texto fora do HTML) analisando os dados: ${JSON.stringify(t)}.
                    O relatório deve conter:
                    1. Um resumo dos ganhos e gastos.
                    2. A maior categoria de despesa pessoal.
                    3. Três sugestões práticas para melhorar a saúde financeira, baseadas nas funcionalidades existentes do Rico Plus.
                `,i=await this.callVercelFunction(n),r=a.helpers.cleanAIResponse(i);a.ui.aiAnalysisResult.innerHTML=r}catch(t){console.error("Erro ao obter análise da IA:",t),a.ui.aiAnalysisResult.innerHTML='<p style="color: var(--red-color);">Ocorreu um erro ao tentar analisar os dados.</p>'}},async getAnnualFinancialAnalysis(){a.ui.aiAnalysisModal.classList.remove("hidden"),a.ui.aiAnalysisResult.innerHTML='<p class="muted-text">Analisando seus dados anuais...</p>';try{const e=a.state.monthlyData;if(!e)throw new Error("Dados anuais não encontrados.");const t=`
                    **Contexto, Regras e Funcionalidades do App:**
                    1. Você é o assistente de IA da plataforma "Rico Plus".
                    2. Você pode dar dicas financeiras gerais, mas ao sugerir ações, SÓ PODE usar as funcionalidades existentes.
                    3. Funcionalidades existentes: Lançamento de ganhos/despesas, categorização, metas de gastos, resumos, gráficos, lançamentos recorrentes, gestão de cartões, exportação PDF/CSV.
                    4. **NÃO INVENTE** funcionalidades que não existem (ex: notificações).
                    5. **NUNCA** mencione apps concorrentes.

                    **Tarefa:**
                    Gere um relatório em HTML (sem texto fora do HTML) analisando os dados anuais: ${JSON.stringify(e)}.
                    O relatório deve conter:
                    1. Um resumo geral dos ganhos, gastos e saldo final do ano.
                    2. O mês de maior gasto e o mês de maior ganho.
                    3. Três insights estratégicos para o próximo ano.
                `,n=await this.callVercelFunction(t),i=a.helpers.cleanAIResponse(n);a.ui.aiAnalysisResult.innerHTML=i}catch(e){console.error("Erro ao obter análise anual da IA:",e),a.ui.aiAnalysisResult.innerHTML='<p style="color: var(--red-color);">Ocorreu um erro ao tentar analisar os dados anuais.</p>'}},async getChatbotResponse(e){try{const t=a.state.monthlyData,n=`
                    **Contexto, Regras e Funcionalidades do App:**
                    1. Você é o assistente de IA da plataforma "Rico Plus". Sua personalidade é prestativa e focada em ajudar.
                    2. Você pode dar dicas financeiras gerais e conceituais (ex: importância de poupar).
                    3. **REGRA CRÍTICA:** Ao sugerir uma AÇÃO PRÁTICA ou FERRAMENTA, você SÓ PODE se basear na seguinte lista de funcionalidades que REALMENTE EXISTEM no Rico Plus:
                        - Lançamento de ganhos (PJ/PF) e despesas.
                        - Categorização de gastos e definição de metas de orçamento.
                        - Resumos, saldos e gráficos.
                        - Lançamentos recorrentes.
                        - Gerenciamento de cartões de crédito.
                    4. **NÃO INVENTE** funcionalidades que não estão na lista (ex: notificações).
                    5. **NUNCA** mencione apps concorrentes. Se o usuário pedir uma ferramenta, reforce o uso do Rico Plus.

                    **Tarefa:**
                    Responda à pergunta do usuário: "${e}". Use os dados financeiros a seguir como base: ${JSON.stringify(t)}.
                    Formate sua resposta de forma clara usando Markdown.
                `,i=await this.callVercelFunction(n),r=document.getElementById("chatbot-messages");r.removeChild(r.lastChild);const m=marked.parse(i);r.innerHTML+=`
                    <div class="p-3 rounded-lg max-w-[85%] text-sm" style="background-color: var(--secondary-bg);">
                        <p class="font-bold mb-1">Assistente</p>
                        <div class="prose dark:prose-invert max-w-none">${m}</div>
                    </div>
                `,r.scrollTop=r.scrollHeight}catch(t){console.error("Erro na resposta do chatbot:",t);const n=document.getElementById("chatbot-messages");n.removeChild(n.lastChild),n.innerHTML+=`
                    <div class="p-3 rounded-lg max-w-[85%] text-sm" style="background-color: var(--secondary-bg);">
                        <p class="font-bold mb-1">Assistente</p>
                        <p>Desculpe, não consegui processar sua pergunta. Tente novamente.</p>
                    </div>
                `,n.scrollTop=n.scrollHeight}},async getCategorySuggestion(e,t,n){const i=n.innerHTML;n.innerHTML="...",n.disabled=!0;try{const r=a.state.categories.map(h=>h.name).join(", "),m=`
                Analise a despesa: "${e}".
                Qual das seguintes categorias melhor se encaixa? Categorias disponíveis: [${r}].
                Responda APENAS com o nome exato de uma das categorias da lista. Sem frases, apenas a categoria.
            `;let s=await this.callVercelFunction(m);s=s.trim().replace(/["'.]/g,"");const g=n.closest(".expense-entry-row").querySelector('[data-field="category"]'),p=a.state.categories.find(h=>h.name.toLowerCase()===s.toLowerCase());if(g&&p){g.value=p.name;const h=new Event("input",{bubbles:!0});g.dispatchEvent(h)}else console.warn(`Categoria sugerida "${s}" não é válida ou não foi encontrada.`)}catch(r){console.error("Erro ao obter sugestão de categoria:",r)}finally{n.innerHTML=i,n.disabled=!1}},async callVercelFunction(e){const n=await fetch("https://controledegastos1-0.vercel.app/api/analyze",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:e})});if(!n.ok)throw new Error(`Erro na API da Vercel: ${n.statusText}`);return(await n.json()).analysis}},render:{updateHeader(){const e=a.state.profile.name?.split(" ")[0]||"Visitante";document.getElementById("greeting-text").textContent=`Olá, ${e}`;const t=new Date().getHours();let n="Tenha um ótimo dia!";t>=5&&t<12?n="Bom dia!":t>=12&&t<18?n="Boa tarde!":n="Boa noite!",document.getElementById("time-greeting").textContent=n;const i=a.state.profile.avatarUrl||"images/default-avatar.svg";document.getElementById("user-avatar").src=i},renderCalendarView(e){const t=document.getElementById(`calendar-container-${e}`);if(!t)return;const n=new Date().getFullYear(),i=new Date(n,e,1),r=new Date(n,e+1,0),m=i.getDay();let o=`
            <div class="calendar-nav-header flex items-center justify-between mb-4 p-2 rounded-xl" style="background-color: var(--input-bg);">
                <button class="calendar-nav-btn" data-action="prev-month" title="Mês Anterior">‹</button>
                <div class="flex flex-col sm:flex-row items-center gap-1 sm:gap-4">
                    <h3 class="text-lg font-semibold text-center">${a.constants.monthNames[e]} ${n}</h3>
                    <button class="px-3 py-1 text-xs font-semibold rounded-lg" style="background-color: var(--secondary-bg); color: var(--secondary-text);" data-action="show-annual">Balanço Anual</button>
                </div>
                <button class="calendar-nav-btn" data-action="next-month" title="Próximo Mês">›</button>
            </div>
        `,g='<div class="calendar-grid">';["Dom","Seg","Ter","Qua","Qui","Sex","Sáb"].forEach(p=>{g+=`<div class="calendar-header">${p}</div>`});for(let p=0;p<m;p++)g+="<div></div>";for(let p=1;p<=r.getDate();p++){const h=a.state.monthlyData[e].expenses[p-1];let c="calendar-day current-month";h&&(h.personalEntries.length>0||h.businessEntries.length>0)&&(c+=" has-entries"),g+=`<div class="${c}" data-day="${p-1}">${p}</div>`}g+="</div>",t.innerHTML=o+g},createMonthContentHTML:e=>`<div id="month-${e}-content" class="month-content">
            <div class="flex justify-end gap-2 mb-4">
                <button class="export-csv-btn px-4 py-2 text-sm font-semibold rounded-lg" style="background-color: var(--secondary-bg); color: var(--secondary-text);" data-month-index="${e}">Exportar CSV</button>
                <button class="export-pdf-btn px-4 py-2 text-sm font-semibold rounded-lg" style="background-color: var(--secondary-bg); color: var(--secondary-text);" data-month-index="${e}">Exportar PDF</button>
            </div>
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
                <div class="lg:col-span-1 p-5 rounded-2xl card border-t-4 border-yellow-400">
                    <h2 class="text-xl font-semibold mb-4">Ganhos Pessoa Jurídica</h2>
                    <div id="pj-entries-container-${e}" class="flex flex-col gap-3 mb-3"></div>
                    <button class="add-entry-btn mt-2 w-full py-2 text-sm font-semibold rounded-lg" style="background-color: var(--secondary-bg); color: var(--secondary-text);" data-month-index="${e}" data-type="pj">+ Adicionar Ganho PJ</button>
                </div>
                <div class="lg:col-span-1 p-5 rounded-2xl card border-t-4 border-green-400">
                    <h2 class="text-xl font-semibold mb-4">Ganhos Pessoa Física</h2>
                    <div id="pf-entries-container-${e}" class="flex flex-col gap-3 mb-3"></div>
                    <button class="add-entry-btn mt-2 w-full py-2 text-sm font-semibold rounded-lg" style="background-color: var(--secondary-bg); color: var(--secondary-text);" data-month-index="${e}" data-type="pf">+ Adicionar Ganho PF</button>
                </div>
                <div class="lg:col-span-1 grid gap-6">
                    <div>
                        <div class="p-5 rounded-2xl card border-t-4 border-blue-400 space-y-4">
                            <div class="space-y-1"><label class="block text-sm font-medium muted-text">Caixa da empresa:</label><p id="companyCash-${e}" class="text-2xl font-semibold">R$ 0,00</p></div>
                            <div class="space-y-1"><label class="block text-sm font-medium muted-text">Caixa pessoal:</label><p id="personalCash-${e}" class="text-2xl font-semibold">R$ 0,00</p></div>
                        </div>
                    </div>
                    <div>
                        <div id="summary-card-${e}" class="p-5 rounded-2xl card border-t-4 border-purple-400">
                            <h2 class="text-xl font-semibold mb-4">Resumo do Mês</h2>
                            <div class="space-y-2 text-sm">
                                <div class="flex justify-between items-center"><span>Gasto Pessoal:</span><span id="totalPersonalExpenses-${e}" class="font-semibold" style="color: var(--red-color);">R$ 0,00</span></div>
                                <div class="flex justify-between items-center"><span>Gasto Empresa:</span><span id="totalBusinessExpenses-${e}" class="font-semibold" style="color: var(--red-color);">R$ 0,00</span></div>
                                <div class="flex justify-between items-center pt-2 border-t" style="border-color: var(--border-color);"><span>Saldo Pessoal:</span><span id="remainingPersonal-${e}" class="font-semibold">R$ 0,00</span></div>
                                <div class="flex justify-between items-center"><span>Saldo Empresa:</span><span id="remainingBusiness-${e}" class="font-semibold">R$ 0,00</span></div>
                                <div class="flex justify-between items-center border-t pt-2 mt-2" style="border-color: var(--border-color);"><span class="font-semibold">Saldo Total:</span><span id="remainingTotal-${e}" class="text-xl font-bold">R$ 0,00</span></div>
                            </div>
                            <div id="budget-alerts-${e}" class="mt-3 text-xs"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="text-center mb-4"><button class="ai-analysis-btn px-5 py-2 text-white font-semibold rounded-xl shadow-sm transition-colors" style="background-color: var(--primary-color);" onmouseover="this.style.backgroundColor=getComputedStyle(this).getPropertyValue('--primary-color-hover')" onmouseout="this.style.backgroundColor=getComputedStyle(this).getPropertyValue('--primary-color')" data-month-index="${e}">Analisar Mês com IA ✨</button></div>
            <div id="calendar-container-${e}" class="mb-8"></div>
            <div id="expense-section-wrapper-${e}" class=""><div id="expense-accordion-container-${e}" class="space-y-2 mb-8"></div></div>
            <div class="grid grid-cols-1 xl:grid-cols-3 gap-6 mt-8">
                <div class="card p-6 rounded-2xl">
                    <h2 class="text-xl font-semibold text-center mb-4">Balanço do Mês</h2>
                    <div class="relative mx-auto" style="max-width: 300px; height: 300px;"><canvas id="budgetPieChart-${e}"></canvas></div>
                </div>
                <div class="card p-6 rounded-2xl">
                    <h2 class="text-xl font-semibold text-center mb-4">Gastos por Pagamento</h2>
                    <div class="relative mx-auto" style="max-width: 300px; height: 300px;"><canvas id="paymentMethodChart-${e}"></canvas></div>
                </div>
                <div class="card p-6 rounded-2xl">
                    <h2 class="text-xl font-semibold text-center mb-4">Metas de Gastos (Pessoal)</h2>
                    <div class="relative mx-auto" style="height: 300px;"><canvas id="budgetGoalsChart-${e}"></canvas></div>
                </div>
            </div>
        </div>`,createBalanceContentHTML:()=>`<div id="month-12-content" class="month-content">
            <div class="flex items-center justify-center gap-4 mb-8">
                <h2 class="text-3xl font-bold">Balanço Anual</h2>
                <button class="px-3 py-1.5 text-sm font-semibold rounded-lg" style="background-color: var(--secondary-bg); color: var(--secondary-text);" data-action="back-to-months">← Voltar</button>
            </div>
            <div class="text-center mb-8 -mt-4"><button id="ai-annual-analysis-btn" class="px-5 py-2 text-white font-semibold rounded-xl shadow-sm transition-colors" style="background-color: var(--primary-color);">Analisar Ano com IA ✨</button></div>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8 text-center">
                <div class="card border-t-4 border-yellow-400 p-5 rounded-2xl"><span class="block text-sm muted-text mb-2">Total Ganhos PJ</span><span id="totalAnnualPJ" class="text-2xl font-semibold">R$ 0,00</span></div>
                <div class="card border-t-4 border-green-400 p-5 rounded-2xl"><span class="block text-sm muted-text mb-2">Total Ganhos PF</span><span id="totalAnnualPF" class="text-2xl font-semibold">R$ 0,00</span></div>
                <div class="card border-t-4 border-red-400 p-5 rounded-2xl"><span class="block text-sm muted-text mb-2">Gastos Totais</span><span id="totalAnnualExpenses" class="text-2xl font-semibold">R$ 0,00</span></div>
                <div class="card border-t-4 border-blue-400 p-5 rounded-2xl"><span class="block text-sm muted-text mb-2">Saldo Final</span><span id="annualBalance" class="text-2xl font-bold">R$ 0,00</span><p id="annualPerformance" class="text-lg font-semibold mt-1"></p></div>
            </div>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div class="card p-6 rounded-2xl lg:col-span-2">
                    <h3 class="text-xl font-semibold text-center mb-4">Desempenho Mensal</h3>
                    <div class="relative mx-auto" style="height: 400px;"><canvas id="monthlyPerformanceBarChart"></canvas></div>
                </div>
                <div class="card p-6 rounded-2xl">
                    <h3 class="text-xl font-semibold text-center mb-4">Maiores Gastos do Ano (Top 5)</h3>
                    <div id="top-spends-container" class="text-sm space-y-2 max-h-96 overflow-y-auto p-2"></div>
                </div>
            </div>
        </div>`,createEntryElement:e=>{const{monthIndex:t,dayIndex:n,category:i,entry:r,type:m}=e,s=document.createElement("div");s.classList.add("flex","items-center","gap-2","w-full","flex-wrap","expense-entry-row");let o="",g="",p="",h="",c="";return m==="expense"?(o=`<button class="remove-btn" data-type="expense" data-month-index="${t}" data-day="${n}" data-category="${i}" data-entry-id="${r.id}">×</button>`,g=`<select class="entry-input p-2 input-field text-sm w-full sm:w-auto" data-field="paymentMethod">${a.constants.basePaymentMethods.map(l=>`<option value="${l}" ${r.paymentMethod===l?"selected":""}>${l}</option>`).join("")}</select>`,r.paymentMethod==="Crédito"&&(p=`<select class="entry-input p-2 input-field text-sm w-full sm:w-auto" data-field="card">${a.state.creditCards.map(l=>`<option value="${l}" ${r.card===l?"selected":""}>${l}</option>`).join("")}</select>`),h=`<select class="entry-input p-2 input-field text-sm w-full sm:w-auto" data-field="category">${a.state.categories.map(l=>`<option value="${l.name}" ${r.category===l.name?"selected":""}>${l.name}</option>`).join("")}</select>`,c='<div class="tooltip-container"><button class="suggest-category-btn flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-xl" style="background-color: var(--secondary-bg); color: var(--secondary-text);">✨</button><span class="tooltip-text">Sugerir categoria com IA</span></div>'):o=`<button class="remove-btn" data-type="${m}" data-month-index="${t}" data-entry-id="${r.id}">×</button>`,s.innerHTML=`<input type="text" value="${r.description}" placeholder="Descrição" class="entry-input flex-grow p-2 input-field text-sm" data-field="description"><input type="number" value="${r.amount}" min="0" step="0.01" placeholder="0,00" class="entry-input w-28 p-2 input-field text-sm" data-field="amount">${h}${c}${g}<span class="card-selector-container">${p}</span>${o}`,s},renderPJEntries:e=>{const t=document.getElementById(`pj-entries-container-${e}`);t&&(t.innerHTML="",a.state.monthlyData[e].pjEntries.forEach(n=>t.appendChild(a.render.createEntryElement({monthIndex:e,entry:n,type:"pj"}))))},renderPFEntries:e=>{const t=document.getElementById(`pf-entries-container-${e}`);t&&(t.innerHTML="",a.state.monthlyData[e].pfEntries.forEach(n=>t.appendChild(a.render.createEntryElement({monthIndex:e,entry:n,type:"pf"}))))},renderExpenseTable:e=>{const t=document.getElementById(`expense-accordion-container-${e}`);if(t){t.innerHTML="";for(let n=0;n<31;n++){const i=document.createElement("div");i.className="accordion-item card rounded-xl overflow-hidden",i.innerHTML=`<div class="accordion-trigger flex justify-between items-center p-4 cursor-pointer" style="background-color: var(--input-bg);"><span class="font-semibold">Dia ${n+1}</span><span class="arrow text-xl muted-text">▼</span></div><div class="accordion-content"><div class="grid grid-cols-1 md:grid-cols-2 gap-6"><div><h3 class="font-semibold mb-3">Gastos Pessoais</h3><div id="personal-entries-${e}-${n}" class="flex flex-col gap-3"></div><button class="add-entry-btn mt-3 px-3 py-1.5 text-sm font-semibold rounded-lg" style="background-color: var(--secondary-bg); color: var(--secondary-text);" data-month-index="${e}" data-day="${n}" data-type="expense" data-category="personal">+ Gasto Pessoal</button></div><div><h3 class="font-semibold mb-3">Gastos da Empresa</h3><div id="business-entries-${e}-${n}" class="flex flex-col gap-3"></div><button class="add-entry-btn mt-3 px-3 py-1.5 text-sm font-semibold rounded-lg" style="background-color: var(--secondary-bg); color: var(--secondary-text);" data-month-index="${e}" data-day="${n}" data-type="expense" data-category="business">+ Gasto Empresa</button></div></div></div>`,t.appendChild(i),["personal","business"].forEach(r=>{const m=i.querySelector(`#${r}-entries-${e}-${n}`);a.state.monthlyData[e].expenses[n][`${r}Entries`].forEach(s=>m.appendChild(a.render.createEntryElement({monthIndex:e,dayIndex:n,category:r,entry:s,type:"expense"})))})}}},updateBudgetAlerts:e=>{const t=document.getElementById(`budget-alerts-${e}`);if(!t)return;const n=a.state.categories.reduce((r,m)=>({...r,[m.name]:0}),{});a.state.monthlyData[e].expenses.forEach(r=>{r.personalEntries.forEach(m=>{n[m.category]!==void 0&&(n[m.category]+=m.amount)})});const i=a.state.categories.map(r=>n[r.name]>r.budget&&r.budget>0?`<li style="color: var(--red-color);">${r.name}: ${a.helpers.formatCurrency(n[r.name]-r.budget)} acima da meta.</li>`:"").filter(Boolean);t.innerHTML=i.length>0?`<p class="font-semibold mt-2">Atenção ao Orçamento:</p><ul class="list-disc list-inside ml-4">${i.join("")}</ul>`:""},updateAllCharts:(e,t)=>{const n=getComputedStyle(document.documentElement).getPropertyValue("--text-color"),i=getComputedStyle(document.documentElement).getPropertyValue("--border-color"),r={responsive:!0,maintainAspectRatio:!1,plugins:{legend:{labels:{color:n,font:{family:"Inter"}}}}},m={...r,scales:{y:{ticks:{color:n},grid:{color:i}},x:{ticks:{color:n},grid:{color:i}}}};a.state.chartInstances.pie&&a.state.chartInstances.pie.destroy(),a.state.chartInstances.pie=new Chart(document.getElementById(`budgetPieChart-${e}`).getContext("2d"),{type:"pie",data:{labels:["Pessoais","Empresa","Saldo"],datasets:[{data:[t.totalPersonal,t.totalBusiness,Math.max(0,t.remainingBudget)],backgroundColor:["#ff453a","#32d74b","#2997ff"]}]},options:r});const s=[...a.constants.basePaymentMethods.filter(d=>d!=="Crédito"),...a.state.creditCards.map(d=>`Crédito (${d})`)],o=Object.fromEntries(s.map(d=>[d,0]));a.state.monthlyData[e].expenses.forEach(d=>{[...d.personalEntries,...d.businessEntries].forEach(u=>{let f=u.paymentMethod==="Crédito"?`Crédito (${u.card})`:u.paymentMethod;o[f]!==void 0&&(o[f]+=u.amount)})});const g=["#007BFF","#FD7E14","#DC3545","#20C997","#6F42C1","#D63384","#198754","#6C757D"];a.state.chartInstances.payment&&a.state.chartInstances.payment.destroy(),a.state.chartInstances.payment=new Chart(document.getElementById(`paymentMethodChart-${e}`).getContext("2d"),{type:"doughnut",data:{labels:s,datasets:[{data:Object.values(o),backgroundColor:g,borderColor:getComputedStyle(document.documentElement).getPropertyValue("--card-bg"),borderWidth:2}]},options:r});const p=a.state.categories.reduce((d,u)=>({...d,[u.name]:0}),{});a.state.monthlyData[e].expenses.forEach(d=>{d.personalEntries.forEach(u=>{p[u.category]!==void 0&&(p[u.category]+=u.amount)})});const h=a.state.categories.map(d=>p[d.name]),c=a.state.categories.map(d=>d.budget),l=h.map((d,u)=>d>c[u]&&c[u]>0?"#ff9500":"#ff453a");a.state.chartInstances.goals&&a.state.chartInstances.goals.destroy(),a.state.chartInstances.goals=new Chart(document.getElementById(`budgetGoalsChart-${e}`).getContext("2d"),{type:"bar",data:{labels:a.state.categories.map(d=>d.name),datasets:[{label:"Gasto",data:h,backgroundColor:l},{label:"Meta",data:c,backgroundColor:"#2997ff"}]},options:{...m,indexAxis:"y"}})},renderBalanceSummary:()=>{let e={pj:0,pf:0,personal:0,business:0},t={gains:[],expenses:[]},n=[];for(let s=0;s<12;s++){if(!a.state.monthlyData[s]){t.gains.push(0),t.expenses.push(0);continue}const o=a.state.monthlyData[s];let g=0,p=0;o.pjEntries.forEach(h=>{e.pj+=h.amount,g+=h.amount}),o.pfEntries.forEach(h=>{e.pf+=h.amount,g+=h.amount}),o.expenses.forEach(h=>{h.personalEntries.forEach(c=>{e.personal+=c.amount,p+=c.amount,c.amount>0&&n.push({...c,month:s})}),h.businessEntries.forEach(c=>{e.business+=c.amount,p+=c.amount})}),t.gains.push(g),t.expenses.push(p)}const i=e.pj+e.pf-(e.personal+e.business);document.getElementById("totalAnnualPJ").textContent=a.helpers.formatCurrency(e.pj),document.getElementById("totalAnnualPF").textContent=a.helpers.formatCurrency(e.pf),document.getElementById("totalAnnualExpenses").textContent=a.helpers.formatCurrency(e.personal+e.business),document.getElementById("annualBalance").textContent=a.helpers.formatCurrency(i);const r=document.getElementById("annualPerformance");r.textContent=i>=0?"Positivo":"Negativo",r.style.color=i>=0?"var(--green-color)":"var(--red-color)";const m=n.sort((s,o)=>o.amount-s.amount).slice(0,5);document.getElementById("top-spends-container").innerHTML=m.map(s=>`<div class="p-2 rounded-lg" style="background-color: var(--input-bg);"><strong class="text-color">${s.category}:</strong> ${a.helpers.formatCurrency(s.amount)} <span class="text-xs muted-text">(${s.description} em ${a.constants.monthNames[s.month]})</span></div>`).join("")||'<p class="muted-text">Nenhum gasto pessoal registrado.</p>',a.render.updateAnnualCharts(t)},updateAnnualCharts:e=>{const t=getComputedStyle(document.documentElement).getPropertyValue("--text-color"),n=getComputedStyle(document.documentElement).getPropertyValue("--border-color"),i={responsive:!0,maintainAspectRatio:!1,plugins:{legend:{labels:{color:t}}},scales:{y:{ticks:{color:t},grid:{color:n}},x:{ticks:{color:t},grid:{color:n}}}};a.state.chartInstances.annualBar&&a.state.chartInstances.annualBar.destroy(),a.state.chartInstances.annualBar=new Chart(document.getElementById("monthlyPerformanceBarChart").getContext("2d"),{type:"bar",data:{labels:a.constants.monthNames.slice(0,12),datasets:[{label:"Ganhos Totais",data:e.gains,backgroundColor:"#32d74b"},{label:"Gastos Totais",data:e.expenses,backgroundColor:"#ff453a"}]},options:i})},renderCardList:()=>{a.ui.cardListContainer.innerHTML=a.state.creditCards.map(e=>`<div class="flex items-center justify-between p-2 rounded-lg" style="background-color: var(--input-bg);"><span class="text-color">${e}</span><button class="remove-card-btn text-red-500 hover:text-red-700" data-card-name="${e}">×</button></div>`).join("")},renderCategoryList:()=>{a.ui.categoryListContainer.innerHTML=a.state.categories.map(e=>`<div class="flex items-center justify-between p-2 rounded-lg gap-2" style="background-color: var(--input-bg);"><input type="text" value="${e.name}" class="category-name-input flex-grow p-1 input-field" data-old-name="${e.name}"><input type="number" value="${e.budget}" min="0" class="category-budget-input w-24 p-1 input-field" data-category-name="${e.name}"><button class="remove-category-btn text-red-500 hover:text-red-700" data-category-name="${e.name}">×</button></div>`).join("")},renderRecurringList:()=>{a.ui.recurringListContainer.innerHTML=a.state.recurringEntries.map((e,t)=>`<div class="text-xs p-2 rounded-lg flex justify-between items-center" style="background-color: var(--input-bg);"><div><p class="font-bold text-color">${e.description} (${a.helpers.formatCurrency(e.amount)})</p><p class="muted-text">Todo dia ${e.dayOfMonth} - ${e.type}</p></div><button class="remove-recurring-btn text-red-500 hover:text-red-700 font-bold" data-index="${t}">×</button></div>`).join("")},renderSettingsModal:()=>{a.render.renderCardList(),a.render.renderCategoryList(),a.render.renderRecurringList(),document.getElementById("recurring-category").innerHTML=a.state.categories.map(e=>`<option value="${e.name}">${e.name}</option>`).join(""),document.getElementById("recurring-payment").innerHTML=a.constants.basePaymentMethods.map(e=>`<option value="${e}">${e}</option>`).join(""),document.getElementById("recurring-card").innerHTML=a.state.creditCards.map(e=>`<option value="${e}">${e}</option>`).join(""),a.ui.settingsModal.classList.remove("hidden"),setTimeout(()=>a.ui.settingsModal.querySelector(".modal-content").classList.remove("scale-95"),10)},renderSettingsModal:()=>{a.render.renderCardList(),a.render.renderCategoryList(),a.render.renderRecurringList();const e=["Ganho PF","Ganho PJ","Gasto Pessoal","Gasto Empresa"];document.getElementById("recurring-type").innerHTML=e.map(t=>`<option value="${t}">${t}</option>`).join(""),document.getElementById("recurring-category").innerHTML=a.state.categories.map(t=>`<option value="${t.name}">${t.name}</option>`).join(""),document.getElementById("recurring-payment").innerHTML=a.constants.basePaymentMethods.map(t=>`<option value="${t}">${t}</option>`).join(""),document.getElementById("recurring-card").innerHTML=a.state.creditCards.map(t=>`<option value="${t}">${t}</option>`).join(""),a.ui.settingsModal.classList.remove("hidden"),setTimeout(()=>a.ui.settingsModal.querySelector(".modal-content").classList.remove("scale-95"),10)},renderAccountModal:()=>{const e=T.currentUser;if(console.log("Dentro de renderAccountModal, o valor de 'user' é:",e),e){a.ui.userNameInput.value=a.state.profile.name||"",a.ui.userEmailDisplay.value=e.email||"";const t=a.state.integrations.whatsapp;a.ui.whatsappPhoneId.value=t.phoneNumberId||"",a.ui.whatsappToken.value=t.accessToken||"",a.ui.whatsappWebhookUrl.value=`${window.location.origin}/api/whatsapp-webhook`,a.ui.whatsappVerifyToken.value=t.webhookVerifyToken||"",t.phoneNumberId&&t.accessToken?(a.ui.whatsappStatus.textContent="Configurado",a.ui.whatsappStatus.style.color="var(--green-color)"):(a.ui.whatsappStatus.textContent="Não configurado",a.ui.whatsappStatus.style.color="var(--muted-text)"),a.ui.accountModal.classList.remove("hidden"),setTimeout(()=>a.ui.accountModal.querySelector(".modal-content").classList.remove("scale-95"),10)}}}};window.App=a;G(T,e=>{e?(A.classList.add("hidden"),k.classList.remove("hidden"),S.classList.remove("hidden"),a.init(e.uid)):(a.state.currentUserId=null,A.classList.remove("hidden"),k.classList.add("hidden"))});
